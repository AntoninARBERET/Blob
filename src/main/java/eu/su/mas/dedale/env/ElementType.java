package eu.su.mas.dedale.env;

import java.io.Serializable;

/**
* All the types of objects/elements that can be found in the environment, independently of the instantiation
* Not directly known by the end user, only by the environment manager
* @author hc
*
*/
 public enum ElementType implements Serializable{
	
	/**
	 * A Well is visible at a distance of 2 and possess an occurrence percentage of 0.05 
	 */
	WELL("Well",1,0.05,null),
	/**
	 * GOld is visible at a distance of 0 and possess an occurrence percentage of 0.1 
	 */
	GOLD("Gold",0,0.1,null),
	/**
	 * Diamond is visible at a distance of 0 and possess an occurrence percentage of 0.01 
	 */
	DIAMOND("Diamond",0,0.01,null),
	
	/**
	 * Stench is generated by the wumpus, is visible on the case it is released, and has an occurence that only depends on the wumpus position and dispersion radius 
	 */
	STENCH("Stench",0),
	
	/**
	 * The wind is generated by a well, is visible on the case it is released, and has an occurrence that only depends on the well position
	 */
	WIND("Wind",0);
	
	
	private String name="";
	private int radius=0;
	private Double occurrencePercentage=0.0;
	private Integer value=null;
	
	

	/**
	 * 
	 * @param name of the object
	 * @param radius distance from which is can be perceived 
	 */
	ElementType(String name,int radius){
		this.name=name;
		this.radius=radius;
	}

	/**
	 * 
	 * @param name
	 * @param radius this distance from which the component is spotted (0,1,2,..)
	 * @param occurrencePercentage occurrence of the component on the map between [0,1] (0 if not used)
	 * @param value of the element null if not used
	 */
	private ElementType(String name,int radius,Double occurrencePercentage,Integer value) {
		this.name=name;
		this.radius=radius;
		this.occurrencePercentage=occurrencePercentage;
		this.value=value;
	}

	public String toString(){
		return this.name+", radius: "+this.radius+", occurencePercentage (-1 if not used): "+this.occurrencePercentage+ "value: "+this.value;
	}

	/***
	 * 
	 * @return the influence radius of the given component (0,1,2,..)
	 */
	public int getRadius(){
		return this.radius;
	}

	/**
	 * 
	 * @return the name of the component
	 */
	public String getName(){
		return this.name;
	}

	/**
	 * 
	 * @return occurrence percentage of the component on the map between [0,1] (null if not used)
	 */
	public Double getOccurrencePercentage(){
		return this.occurrencePercentage;
	}
	
	/**
	 * 
	 * @return value of the element (null if not used)
	 */
	public Integer getValue(){
		return this.value;
	}
}