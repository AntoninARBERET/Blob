package eu.su.mas.dedale.env;

/**
 * Interface that any environment for Dedale's agent should implement
 * @author hc
 *
 */
public interface IEnvironment {

	
	/**
	 * Create an environment.
	 * @param topologyConfigurationFilePath FullPath to the file describing it. If the environment is autogenerated, null .
	 * @param instanceConfiguration FullPath to the file describing it. If the environment is autogenerated, null.
	 */

	public void CreateEnvironment(String topologyConfigurationFilePath, String instanceConfiguration,boolean isGrid, Integer envSize,boolean diamond,boolean gold,boolean well);
			
	
	/**
	 * Add an entity to the graph
	 *
	 * @param entityName the name of the entity to deploy
	 * @param e the {@link EntityCharacteristics} of the entity
	 * @param locationId the (unique) Id of the position to deploy the agent, null if free
	 */
	public void deployEntity(String entityName, EntityCharacteristics e,String locationId);
	
	public void removeEntity(String entityName,EntityCharacteristics e);
	
	/**
	 * @return The name of the environment
	 */
	public String getName();
	
	/**
	 * 
	 * @return The entity current position, null if the entity is not in the environment
	 */
	public String getCurrentPosition(String entityName);
	

	/**
	 * 
	 * @param senderName the senderAgent
	 * @param receiverName The agent we are trying to contact
	 * @param communicationReach the sender agent's com capability
	 * @return true if the receiver is within reach
	 */
	public boolean isReachable(String senderName, String receiverName);

		
}
